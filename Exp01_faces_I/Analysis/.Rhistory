tmp_data=rbind(tmp_data,read.table(f,header=T,na.strings=c(999,999000)))
}
length(tmp_data$trial)/length(subjects)
tmp_data$Experiment=7
tmp_data$ExperimentName="Faces II"
probe_data=rbind.fill(probe_data,tmp_data)
## Experiment 8 - Fractals II
path="~/Dropbox/Experiment_Israel/Codes/Boost_fractals_II/Output/recall/"
subjects=c(101:113,115:124,126:127)
filelist=c()
for (s in subjects){
filelist=c(filelist,Sys.glob(paste(path, "*",s,"_probe_block*.txt",sep="")))
}
length(filelist)/length(subjects)
tmp_data=c()
for (f in filelist){
tmp_data=rbind(tmp_data,read.table(f,header=T,na.strings=c(999,999000)))
}
length(tmp_data$trial)/length(subjects)
tmp_data$Experiment=8
tmp_data$ExperimentName="Fractals II"
probe_data=rbind.fill(probe_data,tmp_data)
count_unique = function(x) {length(unique(x))}
tapply(probe_data$subjectID,probe_data$Experiment,count_unique)
tapply(probe_data$subjectID,probe_data$Experiment,count_unique)
tapply(probe_data$ExperimentName,probe_data$Experiment,unique)
tapply(probe_data$subjectID,probe_data$Experiment,length)/tapply(probe_data$subjectID,probe_data$Experiment,count_unique)
rm(list=ls())
probe_data=c()
## Experiment 1 - Faces I
# No follow-up
## Experiment 2 - Fractals I
path="~/Dropbox/Experiment_Israel/Codes/Boost_fractals_I_recall/Output/recall/"
subjects=c(103,104,106,107,109,111,115,116,118:123,125)
filelist=c()
for (s in subjects){
filelist=c(filelist,Sys.glob(paste(path, "*",s,"_probe_block*.txt",sep="")))
}
length(filelist)/length(subjects)
tmp_data=c()
for (f in filelist){
tmp_data=rbind(tmp_data,read.table(f,header=T,na.strings=c(999,999000)))
}
length(tmp_data$trial)/length(subjects)
tmp_data$Experiment=2
tmp_data$ExperimentName="Fractals I"
probe_data=rbind.fill(probe_data,tmp_data)
## Experiment 3 - Positive IAPS I
# No follow-up
## Experiment 4 - Negative IAPS I
# No follow-up
## Experiment 5 - Visual Cue
path="~/Dropbox/Experiment_Israel/Codes/Boost_visual_cue/Output/RECALL/"
subjects=c(102:106,108:110,112:116,118:125)
filelist=c()
for (s in subjects){
filelist=c(filelist,Sys.glob(paste(path, "*",s,"_probe_block*.txt",sep="")))
}
length(filelist)/length(subjects)
tmp_data=c()
for (f in filelist){
tmp_data=rbind(tmp_data,read.table(f,header=T,na.strings=c(999,999000)))
}
length(tmp_data$trial)/length(subjects)
tmp_data$Experiment=5
tmp_data$ExperimentName="Snacks Visual Cue"
probe_data=rbind.fill(probe_data,tmp_data)
## Experiment 6 - Aversive Cue
path="~/Dropbox/Experiment_Israel/Codes/Boost_aversive_cue/Output/recall/"
subjects=c(101:103,109:110,113,117,119,121:122,123,125,128,132)
filelist=c()
for (s in subjects){
filelist=c(filelist,Sys.glob(paste(path, "*",s,"_probe_block*.txt",sep="")))
}
length(filelist)/length(subjects)
tmp_data=c()
for (f in filelist){
tmp_data=rbind(tmp_data,read.table(f,header=T,na.strings=c(999,999000)))
}
length(tmp_data$trial)/length(subjects)
tmp_data$Experiment=6
tmp_data$ExperimentName="Snacks Aversive Cue"
probe_data=rbind.fill(probe_data,tmp_data)
## Experiment 7 - Faces_II
path="~/Dropbox/Experiment_Israel/Codes/Boost_faces_new/Output/recall/"
subjects=c(101:103,105:107,109:111,113,116:120,122:123,125)
filelist=c()
for (s in subjects){
filelist=c(filelist,Sys.glob(paste(path, "*",s,"_probe_block*.txt",sep="")))
}
length(filelist)/length(subjects)
tmp_data=c()
for (f in filelist){
tmp_data=rbind(tmp_data,read.table(f,header=T,na.strings=c(999,999000)))
}
length(tmp_data$trial)/length(subjects)
tmp_data$Experiment=7
tmp_data$ExperimentName="Faces II"
probe_data=rbind.fill(probe_data,tmp_data)
## Experiment 8 - Fractals II
path="~/Dropbox/Experiment_Israel/Codes/Boost_fractals_II/Output/recall/"
subjects=c(102:104,106,108,110:111,113,115:116,118:120,123:124,126)
filelist=c()
for (s in subjects){
filelist=c(filelist,Sys.glob(paste(path, "*",s,"_probe_block*.txt",sep="")))
}
length(filelist)/length(subjects)
tmp_data=c()
for (f in filelist){
tmp_data=rbind(tmp_data,read.table(f,header=T,na.strings=c(999,999000)))
}
length(tmp_data$trial)/length(subjects)
tmp_data$Experiment=8
tmp_data$ExperimentName="Fractals II"
probe_data=rbind.fill(probe_data,tmp_data)
## Experiment 9 - Positive IAPS II
# No follow-up
## Experiment 10 - Negative IAPS II
# No follow-up
count_unique = function(x) {length(unique(x))}
tapply(probe_data$subjectID,probe_data$Experiment,count_unique)
tapply(probe_data$ExperimentName,probe_data$Experiment,unique)
tapply(probe_data$subjectID,probe_data$Experiment,length)/tapply(probe_data$subjectID,probe_data$Experiment,count_unique)
probe_data$PairType2[probe_data$PairType==1]="High Value"
probe_data$PairType2[probe_data$PairType==2]="Low Value"
probe_data$PairType2[probe_data$PairType==3]="Sanity Go"
probe_data$PairType2[probe_data$PairType==4]="Sanity NoGo"
probe_data$ExperimentNameFull=paste("Exp. ",formatC(probe_data$Experiment,width=2,flag = "0"),": ",probe_data$ExperimentName,sep="")
save(probe_data,file="~/Dropbox/Leptop backup/TAU 2015/Schonberg_Lab/paper_2016_and_thesis/analysis/probe_data_follow_up.Rda")
# Logistic regression analysis
results=c()
for (experiment in experiments) {
HV_results=summary(glmer(Outcome ~ 1 + (1|subjectID),data=subset(probe_data,(PairType2=='High Value' & ExperimentNameFull==experiment)),na.action=na.omit,family=binomial))
LV_results=summary(glmer(Outcome ~ 1 + (1|subjectID),data=subset(probe_data,(PairType2=='Low Value' & ExperimentNameFull==experiment)),na.action=na.omit,family=binomial))
HV_LV_difference_results=summary(glmer(Outcome ~ 1 + PairType + (1|subjectID),data=subset(probe_data,(PairType<=2 & ExperimentNameFull==experiment)),na.action=na.omit,family=binomial))
results=rbind(results,c(HV_results$coefficients[1,],LV_results$coefficients[1,],HV_LV_difference_results$coefficients[2,]))
}
pairs_to_analyze=c('High Value','Low Value','Difference')
row.names(results)=experiments
for (i in 1:length(pairs_to_analyze)) {
cat(c("\n",pairs_to_analyze[i],"\n"))
reuslts_ind=(1+(i-1)*4):(i*4)
print(round(results[,reuslts_ind],3))
}
# Add summary plots
Results_df=as.data.frame(rbind(results[,1:4],results[,5:8]))
colnames(Results_df)=colnames(HV_results$coefficients)
Results_df$pairtype[1:length(results[,1])]="HighValue"
Results_df$pairtype[(length(results[,1])+1):(length(results[,1])*2)]="LowValue"
Results_df$label=as.factor(rownames(Results_df))
Results_df$CI_LogOdds_center=Results_df$Estimate
Results_df$CI_LogOdds_lower=Results_df$Estimate-Results_df$`Std. Error`*1.96
Results_df$CI_LogOdds_upper=Results_df$Estimate+Results_df$`Std. Error`*1.96
Results_df$CI_OddsRatio_center=exp(Results_df$CI_LogOdds_center)
Results_df$CI_OddsRatio_upper=exp(Results_df$CI_LogOdds_upper)
Results_df$CI_OddsRatio_lower=exp(Results_df$CI_LogOdds_lower)
# Forest Plot - Log Odds
forest_plot_LogOdds = ggplot(data=Results_df, aes(x=label, y=CI_LogOdds_center, ymin=CI_LogOdds_lower, ymax=CI_LogOdds_upper,shape=pairtype, colour=pairtype)) +
geom_hline(yintercept=0, lty=2) +  # add a dotted line at x=0 indicating chance level
geom_pointrange(position = position_dodge(width=-0.4), size=1) +
scale_color_manual(values = c("#58ACFA","#F78181")) +
coord_flip() + # flip coordinates (puts labels on y axis)
xlim(rev(levels(Results_df$label))) + # reverses the factor level ordering
xlab("Experiment") + ylab("Estimated Log-Odds (95% CI)") +
theme_bw()  # use a white background
count_unique = function(x) {length(unique(x))}
tapply(probe_data$subjectID,probe_data$Experiment,count_unique)
# Mean proportion participants chose Go items over NoGo items
round(with(data=subset(probe_data,PairType<=2), tapply(Outcome, list(Experiment=ExperimentNameFull,'Proportion Go items were chosen'=PairType2), mean, na.rm=T)),2)
experiments=unique(probe_data$ExperimentNameFull)
results=c()
for (experiment in experiments) {
HV_results=summary(glmer(Outcome ~ 1 + (1|subjectID),data=subset(probe_data,(PairType2=='High Value' & ExperimentNameFull==experiment)),na.action=na.omit,family=binomial))
LV_results=summary(glmer(Outcome ~ 1 + (1|subjectID),data=subset(probe_data,(PairType2=='Low Value' & ExperimentNameFull==experiment)),na.action=na.omit,family=binomial))
HV_LV_difference_results=summary(glmer(Outcome ~ 1 + PairType + (1|subjectID),data=subset(probe_data,(PairType<=2 & ExperimentNameFull==experiment)),na.action=na.omit,family=binomial))
results=rbind(results,c(HV_results$coefficients[1,],LV_results$coefficients[1,],HV_LV_difference_results$coefficients[2,]))
}
pairs_to_analyze=c('High Value','Low Value','Difference')
row.names(results)=experiments
for (i in 1:length(pairs_to_analyze)) {
cat(c("\n",pairs_to_analyze[i],"\n"))
reuslts_ind=(1+(i-1)*4):(i*4)
print(round(results[,reuslts_ind],3))
}
Results_df=as.data.frame(rbind(results[,1:4],results[,5:8]))
colnames(Results_df)=colnames(HV_results$coefficients)
Results_df$pairtype[1:length(results[,1])]="HighValue"
Results_df$pairtype[(length(results[,1])+1):(length(results[,1])*2)]="LowValue"
Results_df$label=as.factor(rownames(Results_df))
Results_df$CI_LogOdds_center=Results_df$Estimate
Results_df$CI_LogOdds_lower=Results_df$Estimate-Results_df$`Std. Error`*1.96
Results_df$CI_LogOdds_upper=Results_df$Estimate+Results_df$`Std. Error`*1.96
Results_df$CI_OddsRatio_center=exp(Results_df$CI_LogOdds_center)
Results_df$CI_OddsRatio_upper=exp(Results_df$CI_LogOdds_upper)
Results_df$CI_OddsRatio_lower=exp(Results_df$CI_LogOdds_lower)
# Forest Plot - Log Odds
forest_plot_LogOdds = ggplot(data=Results_df, aes(x=label, y=CI_LogOdds_center, ymin=CI_LogOdds_lower, ymax=CI_LogOdds_upper,shape=pairtype, colour=pairtype)) +
geom_hline(yintercept=0, lty=2) +  # add a dotted line at x=0 indicating chance level
geom_pointrange(position = position_dodge(width=-0.4), size=1) +
scale_color_manual(values = c("#58ACFA","#F78181")) +
coord_flip() + # flip coordinates (puts labels on y axis)
xlim(rev(levels(Results_df$label))) + # reverses the factor level ordering
xlab("Experiment") + ylab("Estimated Log-Odds (95% CI)") +
theme_bw()  # use a white background
forest_plot_OddsRatio = ggplot(data=Results_df, aes(x=label, y=CI_OddsRatio_center, ymin=CI_OddsRatio_lower, ymax=CI_OddsRatio_upper,shape=pairtype, colour=pairtype)) +
geom_hline(yintercept=1, lty=2) +  # add a dotted line at x=1 indicating chance level
geom_pointrange(position = position_dodge(width=-0.4), size=1) +
scale_color_manual(values = c("#58ACFA","#F78181")) +
coord_flip() + # flip coordinates (puts labels on y axis)
xlim(rev(levels(Results_df$label))) + # reverses the factor level ordering
xlab("Experiment") + ylab("Estimated Odds Ratio (95% CI)") +
theme_bw()  # use a white background
print(forest_plot_LogOdds)
print(forest_plot_OddsRatio)
for (i in 1:length(pairs_to_analyze)) {
cat(c("\n",pairs_to_analyze[i],"\n"))
reuslts_ind=(1+(i-1)*4):(i*4)
print(round(results[,reuslts_ind],3))
}
library(lme4)
library(plyr)
rm(list=ls())
probe_data=c()
## Experiment 1 - Faces I
# No follow-up
## Experiment 2 - Fractals I
path="~/Dropbox/Experiment_Israel/Codes/Boost_fractals_I_recall/Output/recall/"
subjects=c(104,106,107,109,111,115,116,118:123,125)
filelist=c()
for (s in subjects){
filelist=c(filelist,Sys.glob(paste(path, "*",s,"_probe_block*.txt",sep="")))
}
length(filelist)/length(subjects)
tmp_data=c()
for (f in filelist){
tmp_data=rbind(tmp_data,read.table(f,header=T,na.strings=c(999,999000)))
}
length(tmp_data$trial)/length(subjects)
tmp_data$Experiment=2
tmp_data$ExperimentName="Fractals I"
probe_data=rbind.fill(probe_data,tmp_data)
## Experiment 3 - Positive IAPS I
# No follow-up
## Experiment 4 - Negative IAPS I
# No follow-up
## Experiment 5 - Visual Cue
path="~/Dropbox/Experiment_Israel/Codes/Boost_visual_cue/Output/RECALL/"
subjects=c(102:106,108:110,112:116,118:125)
filelist=c()
for (s in subjects){
filelist=c(filelist,Sys.glob(paste(path, "*",s,"_probe_block*.txt",sep="")))
}
length(filelist)/length(subjects)
tmp_data=c()
for (f in filelist){
tmp_data=rbind(tmp_data,read.table(f,header=T,na.strings=c(999,999000)))
}
length(tmp_data$trial)/length(subjects)
tmp_data$Experiment=5
tmp_data$ExperimentName="Snacks Visual Cue"
probe_data=rbind.fill(probe_data,tmp_data)
## Experiment 6 - Aversive Cue
path="~/Dropbox/Experiment_Israel/Codes/Boost_aversive_cue/Output/recall/"
subjects=c(101:103,109:110,113,117,119,121:122,123,125,128,132)
filelist=c()
for (s in subjects){
filelist=c(filelist,Sys.glob(paste(path, "*",s,"_probe_block*.txt",sep="")))
}
length(filelist)/length(subjects)
tmp_data=c()
for (f in filelist){
tmp_data=rbind(tmp_data,read.table(f,header=T,na.strings=c(999,999000)))
}
length(tmp_data$trial)/length(subjects)
tmp_data$Experiment=6
tmp_data$ExperimentName="Snacks Aversive Cue"
probe_data=rbind.fill(probe_data,tmp_data)
## Experiment 7 - Faces_II
path="~/Dropbox/Experiment_Israel/Codes/Boost_faces_new/Output/recall/"
subjects=c(101:103,105:107,109:111,113,116:120,122:123,125)
filelist=c()
for (s in subjects){
filelist=c(filelist,Sys.glob(paste(path, "*",s,"_probe_block*.txt",sep="")))
}
length(filelist)/length(subjects)
tmp_data=c()
for (f in filelist){
tmp_data=rbind(tmp_data,read.table(f,header=T,na.strings=c(999,999000)))
}
length(tmp_data$trial)/length(subjects)
tmp_data$Experiment=7
tmp_data$ExperimentName="Faces II"
probe_data=rbind.fill(probe_data,tmp_data)
## Experiment 8 - Fractals II
path="~/Dropbox/Experiment_Israel/Codes/Boost_fractals_II/Output/recall/"
subjects=c(102:104,106,108,110:111,113,115:116,118:120,123:124,126)
filelist=c()
for (s in subjects){
filelist=c(filelist,Sys.glob(paste(path, "*",s,"_probe_block*.txt",sep="")))
}
length(filelist)/length(subjects)
tmp_data=c()
for (f in filelist){
tmp_data=rbind(tmp_data,read.table(f,header=T,na.strings=c(999,999000)))
}
length(tmp_data$trial)/length(subjects)
tmp_data$Experiment=8
tmp_data$ExperimentName="Fractals II"
probe_data=rbind.fill(probe_data,tmp_data)
## Experiment 9 - Positive IAPS II
# No follow-up
## Experiment 10 - Negative IAPS II
# No follow-up
# Count number of subjects
count_unique = function(x) {length(unique(x))}
tapply(probe_data$subjectID,probe_data$Experiment,count_unique)
tapply(probe_data$ExperimentName,probe_data$Experiment,unique)
tapply(probe_data$subjectID,probe_data$Experiment,length)/tapply(probe_data$subjectID,probe_data$Experiment,count_unique)
probe_data$PairType2[probe_data$PairType==1]="High Value"
probe_data$PairType2[probe_data$PairType==2]="Low Value"
probe_data$PairType2[probe_data$PairType==3]="Sanity Go"
probe_data$PairType2[probe_data$PairType==4]="Sanity NoGo"
probe_data$ExperimentNameFull=paste("Exp. ",formatC(probe_data$Experiment,width=2,flag = "0"),": ",probe_data$ExperimentName,sep="")
save(probe_data,file="~/Dropbox/Leptop backup/TAU 2015/Schonberg_Lab/paper_2016_and_thesis/analysis/probe_data_follow_up.Rda")
rm(list=ls())
my_path="~/Dropbox/Leptop backup/TAU 2015/Schonberg_Lab/paper_2016_and_thesis/analysis/"
my_datafile="probe_data_follow_up.Rda"
load(paste(my_path,my_datafile,sep = ""))
count_unique = function(x) {length(unique(x))}
tapply(probe_data$subjectID,probe_data$Experiment,count_unique)
round(with(data=subset(probe_data,PairType<=2), tapply(Outcome, list(Experiment=ExperimentNameFull,'Proportion Go items were chosen'=PairType2), mean, na.rm=T)),2)
experiments=unique(probe_data$ExperimentNameFull)
results=c()
for (experiment in experiments) {
HV_results=summary(glmer(Outcome ~ 1 + (1|subjectID),data=subset(probe_data,(PairType2=='High Value' & ExperimentNameFull==experiment)),na.action=na.omit,family=binomial))
LV_results=summary(glmer(Outcome ~ 1 + (1|subjectID),data=subset(probe_data,(PairType2=='Low Value' & ExperimentNameFull==experiment)),na.action=na.omit,family=binomial))
HV_LV_difference_results=summary(glmer(Outcome ~ 1 + PairType + (1|subjectID),data=subset(probe_data,(PairType<=2 & ExperimentNameFull==experiment)),na.action=na.omit,family=binomial))
results=rbind(results,c(HV_results$coefficients[1,],LV_results$coefficients[1,],HV_LV_difference_results$coefficients[2,]))
}
pairs_to_analyze=c('High Value','Low Value','Difference')
row.names(results)=experiments
for (i in 1:length(pairs_to_analyze)) {
cat(c("\n",pairs_to_analyze[i],"\n"))
reuslts_ind=(1+(i-1)*4):(i*4)
print(round(results[,reuslts_ind],3))
}
library(lme4)
library(plyr)
rm(list=ls())
probe_data=c()
## Experiment 1 - Faces I
# No follow-up
## Experiment 2 - Fractals I
path="~/Dropbox/Experiment_Israel/Codes/Boost_fractals_I_recall/Output/recall/"
subjects=c(103,104,106,107,109,111,115,116,118:123,125)
filelist=c()
for (s in subjects){
filelist=c(filelist,Sys.glob(paste(path, "*",s,"_probe_block*.txt",sep="")))
}
length(filelist)/length(subjects)
tmp_data=c()
for (f in filelist){
tmp_data=rbind(tmp_data,read.table(f,header=T,na.strings=c(999,999000)))
}
length(tmp_data$trial)/length(subjects)
tmp_data$Experiment=2
tmp_data$ExperimentName="Fractals I"
probe_data=rbind.fill(probe_data,tmp_data)
## Experiment 3 - Positive IAPS I
# No follow-up
## Experiment 4 - Negative IAPS I
# No follow-up
## Experiment 5 - Visual Cue
path="~/Dropbox/Experiment_Israel/Codes/Boost_visual_cue/Output/RECALL/"
subjects=c(102:106,108:110,112:116,118:125)
filelist=c()
for (s in subjects){
filelist=c(filelist,Sys.glob(paste(path, "*",s,"_probe_block*.txt",sep="")))
}
length(filelist)/length(subjects)
tmp_data=c()
for (f in filelist){
tmp_data=rbind(tmp_data,read.table(f,header=T,na.strings=c(999,999000)))
}
length(tmp_data$trial)/length(subjects)
tmp_data$Experiment=5
tmp_data$ExperimentName="Snacks Visual Cue"
probe_data=rbind.fill(probe_data,tmp_data)
## Experiment 6 - Aversive Cue
path="~/Dropbox/Experiment_Israel/Codes/Boost_aversive_cue/Output/recall/"
subjects=c(101:103,109:110,113,117,119,121:122,123,125,128,132)
filelist=c()
for (s in subjects){
filelist=c(filelist,Sys.glob(paste(path, "*",s,"_probe_block*.txt",sep="")))
}
length(filelist)/length(subjects)
tmp_data=c()
for (f in filelist){
tmp_data=rbind(tmp_data,read.table(f,header=T,na.strings=c(999,999000)))
}
length(tmp_data$trial)/length(subjects)
tmp_data$Experiment=6
tmp_data$ExperimentName="Snacks Aversive Cue"
probe_data=rbind.fill(probe_data,tmp_data)
## Experiment 7 - Faces_II
path="~/Dropbox/Experiment_Israel/Codes/Boost_faces_new/Output/recall/"
subjects=c(101:103,105:107,109:111,113,116:120,122:123,125)
filelist=c()
for (s in subjects){
filelist=c(filelist,Sys.glob(paste(path, "*",s,"_probe_block*.txt",sep="")))
}
length(filelist)/length(subjects)
tmp_data=c()
for (f in filelist){
tmp_data=rbind(tmp_data,read.table(f,header=T,na.strings=c(999,999000)))
}
length(tmp_data$trial)/length(subjects)
tmp_data$Experiment=7
tmp_data$ExperimentName="Faces II"
probe_data=rbind.fill(probe_data,tmp_data)
## Experiment 8 - Fractals II
path="~/Dropbox/Experiment_Israel/Codes/Boost_fractals_II/Output/recall/"
subjects=c(102:104,106,108,110:111,113,115:116,118:120,123:124,126)
filelist=c()
for (s in subjects){
filelist=c(filelist,Sys.glob(paste(path, "*",s,"_probe_block*.txt",sep="")))
}
length(filelist)/length(subjects)
tmp_data=c()
for (f in filelist){
tmp_data=rbind(tmp_data,read.table(f,header=T,na.strings=c(999,999000)))
}
length(tmp_data$trial)/length(subjects)
tmp_data$Experiment=8
tmp_data$ExperimentName="Fractals II"
probe_data=rbind.fill(probe_data,tmp_data)
## Experiment 9 - Positive IAPS II
# No follow-up
## Experiment 10 - Negative IAPS II
# No follow-up
# Count number of subjects
count_unique = function(x) {length(unique(x))}
tapply(probe_data$subjectID,probe_data$Experiment,count_unique)
tapply(probe_data$ExperimentName,probe_data$Experiment,unique)
tapply(probe_data$subjectID,probe_data$Experiment,length)/tapply(probe_data$subjectID,probe_data$Experiment,count_unique)
probe_data$PairType2[probe_data$PairType==1]="High Value"
probe_data$PairType2[probe_data$PairType==2]="Low Value"
probe_data$PairType2[probe_data$PairType==3]="Sanity Go"
probe_data$PairType2[probe_data$PairType==4]="Sanity NoGo"
probe_data$ExperimentNameFull=paste("Exp. ",formatC(probe_data$Experiment,width=2,flag = "0"),": ",probe_data$ExperimentName,sep="")
save(probe_data,file="~/Dropbox/Leptop backup/TAU 2015/Schonberg_Lab/paper_2016_and_thesis/analysis/probe_data_follow_up.Rda")
library(lme4)
library(ggplot2)
# Clear workspace
rm(list=ls())
my_path="~/Dropbox/Leptop backup/TAU 2015/Schonberg_Lab/paper_2016_and_thesis/analysis/"
my_datafile="probe_data.Rda" # Original file
load(paste(my_path,my_datafile,sep = ""))
count_unique = function(x) {length(unique(x))}
tapply(probe_data$subjectID,probe_data$Experiment,count_unique)
round(with(data=subset(probe_data,PairType<=2), tapply(Outcome, list(Experiment=ExperimentNameFull,'Proportion Go items were chosen'=PairType2), mean, na.rm=T)),2)
experiments=unique(probe_data$ExperimentNameFull)
results=c()
for (experiment in experiments) {
HV_results=summary(glmer(Outcome ~ 1 + (1|subjectID),data=subset(probe_data,(PairType2=='High Value' & ExperimentNameFull==experiment)),na.action=na.omit,family=binomial))
LV_results=summary(glmer(Outcome ~ 1 + (1|subjectID),data=subset(probe_data,(PairType2=='Low Value' & ExperimentNameFull==experiment)),na.action=na.omit,family=binomial))
HV_LV_difference_results=summary(glmer(Outcome ~ 1 + PairType + (1|subjectID),data=subset(probe_data,(PairType<=2 & ExperimentNameFull==experiment)),na.action=na.omit,family=binomial))
results=rbind(results,c(HV_results$coefficients[1,],LV_results$coefficients[1,],HV_LV_difference_results$coefficients[2,]))
}
pairs_to_analyze=c('High Value','Low Value','Difference')
row.names(results)=experiments
for (i in 1:length(pairs_to_analyze)) {
cat(c("\n",pairs_to_analyze[i],"\n"))
reuslts_ind=(1+(i-1)*4):(i*4)
print(round(results[,reuslts_ind],3))
}
my_datafile="probe_data_follow_up.Rda"
load(paste(my_path,my_datafile,sep = ""))
# Number of subjects
count_unique = function(x) {length(unique(x))}
tapply(probe_data$subjectID,probe_data$Experiment,count_unique)
# Mean proportion participants chose Go items over NoGo items
round(with(data=subset(probe_data,PairType<=2), tapply(Outcome, list(Experiment=ExperimentNameFull,'Proportion Go items were chosen'=PairType2), mean, na.rm=T)),2)
# Experiment numbers to be analyzed
experiments=unique(probe_data$ExperimentNameFull)
# Logistic regression analysis
results=c()
for (experiment in experiments) {
HV_results=summary(glmer(Outcome ~ 1 + (1|subjectID),data=subset(probe_data,(PairType2=='High Value' & ExperimentNameFull==experiment)),na.action=na.omit,family=binomial))
LV_results=summary(glmer(Outcome ~ 1 + (1|subjectID),data=subset(probe_data,(PairType2=='Low Value' & ExperimentNameFull==experiment)),na.action=na.omit,family=binomial))
HV_LV_difference_results=summary(glmer(Outcome ~ 1 + PairType + (1|subjectID),data=subset(probe_data,(PairType<=2 & ExperimentNameFull==experiment)),na.action=na.omit,family=binomial))
results=rbind(results,c(HV_results$coefficients[1,],LV_results$coefficients[1,],HV_LV_difference_results$coefficients[2,]))
}
pairs_to_analyze=c('High Value','Low Value','Difference')
row.names(results)=experiments
for (i in 1:length(pairs_to_analyze)) {
cat(c("\n",pairs_to_analyze[i],"\n"))
reuslts_ind=(1+(i-1)*4):(i*4)
print(round(results[,reuslts_ind],3))
}
# Summary dataframe for plots
Results_df=as.data.frame(rbind(results[,1:4],results[,5:8]))
colnames(Results_df)=colnames(HV_results$coefficients)
Results_df$pairtype[1:length(results[,1])]="HighValue"
Results_df$pairtype[(length(results[,1])+1):(length(results[,1])*2)]="LowValue"
Results_df$label=as.factor(rownames(Results_df))
Results_df$CI_LogOdds_center=Results_df$Estimate
Results_df$CI_LogOdds_lower=Results_df$Estimate-Results_df$`Std. Error`*1.96
Results_df$CI_LogOdds_upper=Results_df$Estimate+Results_df$`Std. Error`*1.96
Results_df$CI_OddsRatio_center=exp(Results_df$CI_LogOdds_center)
Results_df$CI_OddsRatio_upper=exp(Results_df$CI_LogOdds_upper)
Results_df$CI_OddsRatio_lower=exp(Results_df$CI_LogOdds_lower)
